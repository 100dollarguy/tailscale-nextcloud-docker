name: Nextcloud Docker CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # üì• Checkout repo
      - name: Check out repository
        uses: actions/checkout@v3

      # ‚öôÔ∏è Set up Docker Buildx (for caching)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # üì¶ Install Docker Compose + curl
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose curl

      # üíæ Cache Docker build layers (useful for future build steps)
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # üîê Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # üõ† Build containers (likely pulls official images for your compose setup)
      - name: Build containers
        run: docker-compose -f docker-compose.yml build

      # üöÄ Start full stack
      - name: Start stack
        run: docker-compose -f docker-compose.yml up -d

      # ‚úÖ Check running containers
      - name: Check running containers
        run: docker-compose ps

      # üåê Improved Health check with verbosity + longer wait
      - name: Health check Nextcloud
        run: |
          PORT=$(docker ps --filter "name=app" --format '{{.Ports}}' | grep -oE '[0-9]+->80/tcp' | cut -d'-' -f1)
          if [ -z "$PORT" ]; then
            echo "‚ùå Could not detect mapped host port for Nextcloud app"
            exit 1
          fi
          echo "‚ÑπÔ∏è Detected Nextcloud on host port $PORT"
          for i in {1..20}; do
            echo "Attempt $i: Checking Nextcloud HTTP response on port $PORT"
            HTTP_CODE=$(curl -s -w "%{http_code}" -o /dev/null http://localhost:$PORT)
            echo "HTTP response code: $HTTP_CODE"
            if [ "$HTTP_CODE" = "200" ]; then
              echo "‚úÖ Nextcloud is responding on port $PORT"
              exit 0
            fi
            echo "Waiting for Nextcloud to respond (10 sec wait)..."
            sleep 10
          done
          echo "‚ùå Nextcloud did not respond after 200 seconds"
          echo "===== DOCKER COMPOSE LOGS ====="
          docker-compose logs --no-color
          exit 1

      # üì§ Push the Nextcloud app image to Docker Hub
      - name: Push Nextcloud image to Docker Hub
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/nextcloud:latest
          echo "Pushing Docker image $IMAGE_NAME"
          docker tag nextcloud $IMAGE_NAME
          docker push $IMAGE_NAME

      # üßπ Tear down services cleanly
      - name: Tear down stack
        run: docker-compose -f docker-compose.yml down

